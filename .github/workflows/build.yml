# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Build"

on:
  pull_request:
  push:
    branches:
      - "master"

env:
  COMPOSER_ROOT_VERSION: "0.12.x-dev"

jobs:
  tests:
    name: "Tests"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
        operating-system: [ubuntu-latest, windows-latest]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.2.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.3.0"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: mbstring

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Tests"
        run: |
          cd e2e
          composer install
          # php testPharAutoloader.php
          vendor/bin/phpunit PharTest.php
  tests-extensions:
    name: "Extension Tests"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
        extension-name:
          - "phpstan-phpunit"
          - "phpstan-strict-rules"
          - "phpstan-mockery"
          - "phpstan-doctrine"
          - "phpstan-symfony"
          - "phpstan-php-parser"
          - "phpstan-deprecation-rules"
          - "phpdoc-parser"
          - "phpstan-nette"
          - "phpstan-dibi"
          - "phpstan-webmozart-assert"
          - "phpstan-beberlei-assert"
        static-reflection:
          - "true"
          - "false"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.2.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.3.0"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Extension build"
        env:
          STATIC_REFLECTION: ${{ matrix.static-reflection }}
        run: "./e2e/test-extension.sh 'https://github.com/phpstan/${{ matrix.extension-name }}.git'"

  other-tests:
    name: "Other Tests"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
        script:
          - |
            cd e2e
            git clone https://github.com/nikic/PHP-Parser.git
            cd PHP-Parser
            git checkout v3.1.5
            composer install
            ../../phpstan analyse -l 0 -c ../php-parser-baseline.neon lib
          - |
            cd e2e/phpstorm-stubs
            composer install
            ../../phpstan analyse -l 8 test.php
            vendor/bin/phpunit ExampleTest.php
          - |
            cd e2e/react-promise
            composer install
            ../../phpstan analyse -l 8 src
          - |
            cd e2e/hoa
            composer install
            ../../phpstan analyse -l 8 src
          - |
            cd e2e/different-php-parser
            composer install
            ../../phpstan analyse -l 8 test.php
          - |
            cd e2e/different-phpdoc-parser
            composer install
            ../../phpstan analyse -l 8 -a Test.php Test.php
          - |
            cd e2e/php-metrics
            composer install
            ../../phpstan analyse -l 8 test.php
          - |
            cd e2e/react-bootstrap
            composer install
            ../../phpstan analyse -l 8 -c phpstan.neon test.php
          - |
            cd e2e/no-autoloader
            composer install
            ../../phpstan analyse -l 8 -c phpstan.neon src tests
          - |
            cd e2e/mongodb
            ../../phpstan analyse -l 8 test.php
          - |
            cd e2e/alias-event
            ../../phpstan analyse -l 8 -a alias.php test.php
          - |
            cd e2e/alias-event
            ../../phpstan analyse -l 8 -a alias.php -c staticReflection.neon test.php
          - |
            cd e2e/polyfills
            composer install
            ../../phpstan analyse -l 8 test.php

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.2.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.3.0"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Disable MongoDB extension"
        run: sudo phpdismod -v ${{ matrix.php-version }} mongodb

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Tests"
        run: "${{ matrix.script }}"

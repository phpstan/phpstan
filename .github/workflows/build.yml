# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Build"

on:
  pull_request:
  push:
    branches:
      - "master"

env:
  COMPOSER_ROOT_VERSION: "0.12.x-dev"

jobs:
  tests:
    name: "Tests"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
        operating-system: [ubuntu-latest, windows-latest]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.4.1"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: mbstring
          tools: composer:snapshot

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest --ignore-platform-reqs"

      - name: "Tests"
        run: |
          cd e2e
          composer install --ignore-platform-reqs
          # php testPharAutoloader.php
          vendor/bin/phpunit PharTest.php
  tests-extensions:
    name: "Extension Tests"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
        extension-name:
          - "phpstan-phpunit"
          - "phpstan-strict-rules"
          - "phpstan-mockery"
          - "phpstan-doctrine"
          - "phpstan-symfony"
          - "phpstan-php-parser"
          - "phpstan-deprecation-rules"
          - "phpdoc-parser"
          - "phpstan-nette"
          - "phpstan-dibi"
          - "phpstan-webmozart-assert"
          - "phpstan-beberlei-assert"
        static-reflection:
          - "true"
          - "false"
        exclude:
          - extension-name: "phpstan-phpunit"
            static-reflection: "true"
          - extension-name: "phpstan-doctrine"
            php-version: "8.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.4.1"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=256M

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest --ignore-platform-reqs"

      - name: "Extension build"
        env:
          STATIC_REFLECTION: ${{ matrix.static-reflection }}
          PHP_VERSION: ${{ matrix.php-version }}
        run: "./e2e/test-extension.sh 'https://github.com/phpstan/${{ matrix.extension-name }}.git'"

  other-tests:
    name: "Other Tests"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
        script:
          - |
            cd e2e
            git clone https://github.com/nikic/PHP-Parser.git
            cd PHP-Parser
            git checkout v3.1.5
            composer install
            ../../phpstan analyse -l 0 -c ../php-parser-baseline.neon lib
          - |
            cd e2e/react-promise
            composer install
            ../../phpstan analyse -l 8 src
          - |
            cd e2e/hoa
            composer install
            ../../phpstan analyse -l 8 src
          - |
            cd e2e/different-php-parser
            composer install --ignore-platform-reqs
            ../../phpstan analyse -l 8 test.php src
          - |
            cd e2e/different-phpdoc-parser
            composer install --ignore-platform-reqs
            ../../phpstan analyse -l 8 -a Test.php Test.php
          - |
            cd e2e/php-metrics
            composer install --ignore-platform-reqs
            ../../phpstan analyse -l 8 test.php
          - |
            cd e2e/react-bootstrap
            composer install --ignore-platform-reqs
            ../../phpstan analyse -l 8 -c phpstan.neon test.php
          - |
            cd e2e/no-autoloader
            composer install --ignore-platform-reqs
            ../../phpstan analyse -l 8 -c phpstan.neon src tests
          - |
            cd e2e/mongodb
            ../../phpstan analyse -l 8 test.php
          - |
            cd e2e/alias-event
            ../../phpstan analyse -l 8 -a alias.php test.php
          - |
            cd e2e/alias-event
            ../../phpstan analyse -l 8 -a alias.php -c staticReflection.neon test.php
          - |
            cd e2e/polyfills
            composer install
            ../../phpstan analyse -l 8 test.php
          - |
            cd e2e/symfony-event
            composer install --ignore-platform-reqs
            ../../phpstan analyse -l 2 src
          - |
            cd e2e/composer-file
            composer install
            ../../phpstan analyse -l 8 test.php
        include:
          - php-version: 8.0
            script: |
              cd e2e/union-type
              ../../phpstan analyse -l 8 test.php
          - php-version: 7.4
            script: |
              cd e2e/phpstorm-stubs
              composer install --ignore-platform-reqs
              ../../phpstan analyse -l 8 test.php
              vendor/bin/phpunit ExampleTest.php

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.4.1"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=256M

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Disable MongoDB extension"
        run: sudo phpdismod -v ${{ matrix.php-version }} mongodb

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Tests"
        run: "${{ matrix.script }}"

  integration-tests:
    name: "Integration Tests"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        script:
          - |
            git clone https://github.com/sebastianbergmann/phpunit.git e2e/integration/repo
            cd e2e/integration/repo
            git checkout 9.2.3
            export COMPOSER_ROOT_VERSION=9.2.3
            composer install
            ../../../phpstan.phar analyse -l 8 -c ../phpunit.neon src tests
          - |
            git clone https://github.com/nunomaduro/larastan.git e2e/integration/repo
            cd e2e/integration/repo
            git checkout v0.6.1
            composer install
            ../../../phpstan.phar analyse
          - |
            git clone https://github.com/rectorphp/rector.git e2e/integration/repo
            cd e2e/integration/repo
            git checkout 4873119f76c422209995f4e92ecfb5a971c74480
            cp ../rector-composer.lock composer.lock
            composer install
            rm stubs/Symfony/Component/Process/Process.php
            ../../../phpstan.phar analyse -c ../rector.neon
          - |
            git clone https://github.com/slevomat/coding-standard.git e2e/integration/repo
            cd e2e/integration/repo
            git checkout 6.3.9
            composer install
            ../../../phpstan.phar analyse -c ../slevomat-cs.neon -l 7 SlevomatCodingStandard
            ../../../phpstan.phar analyse -c build/PHPStan/phpstan.tests.neon -l 7 tests
          - |
            git clone https://github.com/composer/composer.git e2e/integration/repo
            cd e2e/integration/repo
            git checkout 2.0.0-alpha1
            composer install
            composer config platform --unset && composer update
            bin/composer require --dev phpunit/phpunit:^7.5 --with-all-dependencies
            ../../../phpstan.phar analyse -c ../composer.neon -l 5 src tests
          - |
            git clone https://github.com/pmmp/PocketMine-MP.git e2e/integration/repo
            cd e2e/integration/repo
            git checkout 3.14.2
            composer install --ignore-platform-reqs
            ../../../phpstan.phar analyse --memory-limit=2G

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.4.1"
        with:
          coverage: "none"
          php-version: "7.4"
          tools: pecl
          extensions: pthreads

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-7.4-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-7.4-composer-"

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Tests"
        run: "${{ matrix.script }}"
